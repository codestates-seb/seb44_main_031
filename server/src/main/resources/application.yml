cloud:
  aws:
    s3:
      bucket: mybucketforpetmily
    region:
      static: ap-northeast-2
    stack:
      auto: false # CloudFormation 구성을 사용하지 않도록 설정
    credentials:
      accessKey:
      secretKey:

Spring:

  servlet:
    multipart:
      max-file-size: 1MB
      max-request-size: 3MB

  mail:
    host: smtp.gmail.com # gmail SMTP 서버
    port: 587 # gmail SMTP 서버
    username: dlawjdals02182@gmail.com
    password:
    properties: # 추가 속성
      mail:
        smtp:
          auth: true # SMTP 서버에 인증
          ssl:
            enable: true
          starttls: # TLS 를 사용하여 안전한 연결 설정
            enable: true
            required: true

  redis:
    host: 127.0.0.1
    port: 6379

#  h2:
#    console:
#      enabled: true
#      path: /h2-console
#  profiles:
#    active: local
#  datasource:
#    url: jdbc:h2:mem:test
#    username: sa
#    password:
#    driver-class-name: org.h2.Driver
#  jpa:
#    database-platform: org.hibernate.dialect.H2Dialect
#    hibernate:
#      ddl-auto: create-drop
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true

  datasource:
    url: jdbc:mysql://localhost:3307/yyyy?useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: root
    password:
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false
    database: mysql
    database-platform: org.hibernate.spatial.dialect.mysql.MySQL56InnoDBSpatialDialect
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  sql:
    init:
      mode: always

jwt:
  key: fasdfdasfasdfdsfasdfasdfasdfasdfasdf
  access-token-expiration-minutes: 60
  refresh-token-expiration-minutes: 20160

logging.level:
  org.hibernate.SQL: debug
